version: '2.3'

services:
  conductor-server:
    image: amithkoujalgi/conductor-server:0.1
    environment:
      - CONFIG_PROP=config-redis.properties
    networks:
      - internal
    ports:
      - "8080:8080"
      - "5000:5000"
    volumes:
      - ./config/conductor/config-redis.properties:/app/config/config-redis.properties
    healthcheck:
      test: ["CMD", "curl","-I" ,"-XGET", "http://localhost:8080/health"]
      interval: 60s
      timeout: 30s
      retries: 12
    links:
      - conductor-elasticsearch:es
      - conductor-redis:rs
    depends_on:
      conductor-elasticsearch:
        condition: service_healthy
      conductor-redis:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  conductor-redis:
    image: redis:6.2.3-alpine
    volumes:
      - ./config/conductor/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - internal
    ports:
      - "7379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  conductor-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.11
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
      - xpack.security.enabled=false
      - discovery.type=single-node
#    volumes:
#      - esdata-conductor:/usr/share/elasticsearch/data
    networks:
      - internal
    ports:
      - "9201:9200"
    healthcheck:
      test: curl http://localhost:9200/_cluster/health -o /dev/null
      interval: 5s
      timeout: 5s
      retries: 12
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  prometheus:
    image: prom/prometheus
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command:
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - prometheus:/tmp/prometheus
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/provisioning/alerting:/etc/grafana/provisioning/alerting:ro
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  esdata-conductor:
    driver: local
  prometheus:
    driver: local

networks:
  internal:
